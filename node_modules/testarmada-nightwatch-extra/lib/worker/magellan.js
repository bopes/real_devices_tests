"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MagellanWorker = function () {
  function MagellanWorker(_ref) {
    var nightwatch = _ref.nightwatch;

    _classCallCheck(this, MagellanWorker);

    this.nightwatch = nightwatch;
  }

  _createClass(MagellanWorker, [{
    key: "emitMetadata",
    value: function emitMetadata(metadata) {
      /* istanbul ignore if */
      // nightwatch will add response from /session to capabilities
      // we need that info to compose the result sometimes
      /*
        metadata: {
          sessionId: sessionId
          capabilities: capabilities
        }
       */
      if (process.send) {
        // notice: each executor will generate report url by itself
        //         only meta data is emitted here

        process.send({
          type: "test-meta-data",
          metadata: metadata
        });
      }
    }
  }, {
    key: "handleMessage",
    value: function handleMessage(message) {
      /* istanbul ignore if */
      if (message && message.signal === "bail") {
        // instead of counting on assertion, we throws error out and fail the test directly
        throw new Error(message.customMessage || "Test killed.");
      }
    }
  }]);

  return MagellanWorker;
}();

exports.default = MagellanWorker;
//# sourceMappingURL=magellan.js.map