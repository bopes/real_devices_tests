"use strict";

var _testarmadaTreeKill = require("testarmada-tree-kill");

var _testarmadaTreeKill2 = _interopRequireDefault(_testarmadaTreeKill);

var _logger = require("../util/logger");

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var pid = process.pid;

// Max time before we forcefully kill child processes left over after a suite run
var ZOMBIE_POLLING_MAX_TIME = 10000;

var killZombieProcess = function killZombieProcess(callback) {
  _logger2.default.debug("Checking for zombie child processes...");

  _testarmadaTreeKill2.default.getZombieChildren(pid, ZOMBIE_POLLING_MAX_TIME, function (zombieChildren) {
    if (zombieChildren.length > 0) {
      _logger2.default.log("Giving up waiting for zombie child processes to die. Cleaning up..");
      /* eslint-disable consistent-return,callback-return */
      var killNextZombie = function killNextZombie() {
        if (zombieChildren.length > 0) {
          var nextZombieTreePid = zombieChildren.shift();
          _logger2.default.log("Killing pid and its child pids: " + nextZombieTreePid);
          _testarmadaTreeKill2.default.kill(nextZombieTreePid, "SIGKILL", killNextZombie);
        } else {
          _logger2.default.log("Done killing zombies.");
          return callback();
        }
      };

      return killNextZombie();
    } else {
      _logger2.default.debug("No zombies found.");
      return callback();
    }
  });
};

/* eslint-disable consistent-return,callback-return */
var stopAppium = function stopAppium(client, callback) {
  if (client.appiumServer) {
    client.appiumServer.close().then(function () {
      client.appiumServer = null;
      _logger2.default.log("Appium server is stopped");
      killZombieProcess(callback);
    }).catch(function (err) {
      _logger2.default.err("Appium server isn't stopped successfully, " + err);
      killZombieProcess(callback);
    });
  } else {
    _logger2.default.log("No appium is configured in nightwatch.json, skip appium stop");
    callback();
  }
};

module.exports = stopAppium;
//# sourceMappingURL=stop.js.map