"use strict";

var _logger = require("../util/logger");

var _logger2 = _interopRequireDefault(_logger);

var _settings = require("../settings");

var _settings2 = _interopRequireDefault(_settings);

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable consistent-return,callback-return,camelcase */
var startAppium = function startAppium(client, test_settings, callback) {
  if (test_settings.appium && test_settings.appium.start_process) {

    var loglevel = test_settings.appium.loglevel ? test_settings.appium.loglevel : "info";

    if (_settings2.default.verbose) {
      loglevel = "debug";
    }

    try {
      /*eslint-disable global-require*/
      var appium = require("appium/build/lib/main").main;
      var config = _lodash2.default.assign({}, _lodash2.default.omit(test_settings.appium, "start_process"), {
        throwInsteadOfExit: true,
        loglevel: loglevel,
        port: test_settings.selenium_port
      });

      _logger2.default.debug(JSON.stringify(config));

      appium(config).then(function (server) {
        _logger2.default.log("Appium server is launched");
        client.appiumServer = server;
        callback();
      });
    } catch (e) {
      _logger2.default.err("Appium server isn't launched successfully, " + e);
      // where appium isnt found
      callback(e);
    }
  } else {
    _logger2.default.log("No appium is configured in nightwatch.json, skip appium start");
    callback();
  }
};

module.exports = startAppium;
//# sourceMappingURL=start.js.map