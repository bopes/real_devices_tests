{"version":3,"sources":["../src/base-command.js"],"names":["MAX_TIMEOUT","COMMAND_MAX_TIMEOUT","WAIT_INTERVAL","SEEN_MAX","JS_SEEN_MAX","Base","nightwatch","customizedSettings","call","isSync","startTime","time","totalTime","seleniumCallTime","executeAsyncTime","selectorPrefix","selector","successMessage","failureMessage","checkConditions","bind","syncModeBrowserList","client","queue","instance","currentNode","stackTrace","inherits","prototype","decide","self","nightwatchExecute","api","executeAsync","executeSizzlejs","executeSizzlejsAsync","exam","b","v","desiredCapabilities","browser","parseInt","browser_version","toLowerCase","browserName","version","forEach","cap","split","length","execute","executeSizzlejsSync","injectedJsCommand","result","isVisible","seenCount","elapsed","Date","getTime","seens","selectorLength","warn","selectorVisibleLength","elapse","do","value","fail","title","setTimeout","fn","args","callback","innerArgs","cloneDeep","depageobjectize","shift","locateStrategy","unshift","push","getSizzlejsSource","JS_WAIT_INTERNAL","verbose","log","JSON","stringify","status","errorStatus","jsDuration","jsStepDuration","isResultReset","isVisibleStrict","sel","yellowBright","resultDisplay","e","inspect","pass","actual","expected","pactual","pexpected","message","assertion","format","capabilities","options","type","cmd","cb","apply","emit","$el","command","module","exports"],"mappings":"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","file":"base-command.js","sourcesContent":["import EventEmitter from \"events\";\nimport util from \"util\";\nimport _ from \"lodash\";\nimport clc from \"cli-color\";\nimport safeJsonStringify from \"json-stringify-safe\";\n\nimport settings from \"./settings\";\nimport selectorUtil from \"./util/selector\";\nimport jsInjection from \"./injections/js-injection\";\nimport stats from \"./util/stats\";\nimport logger from \"./util/logger\";\n\nimport errorDictionary from \"./errorDictionary\";\n\n// Wait until we've seen a selector as :visible SEEN_MAX times, with a\n// wait for WAIT_INTERVAL milliseconds between each visibility test.\nconst MAX_TIMEOUT = settings.COMMAND_MAX_TIMEOUT;\nconst WAIT_INTERVAL = settings.WAIT_INTERVAL;\nconst SEEN_MAX = settings.SEEN_MAX;\nconst JS_SEEN_MAX = settings.JS_SEEN_MAX;\n\nconst Base = function (nightwatch = null, customizedSettings = null) {\n  EventEmitter.call(this);\n\n  this.isSync = false;\n  this.startTime = 0;\n  this.time = {\n    totalTime: 0,\n    seleniumCallTime: 0,\n    executeAsyncTime: 0\n  };\n\n  this.selectorPrefix = \"data-magellan-temp-automation-id\";\n  this.selector = null;\n\n  this.successMessage = \"\";\n  this.failureMessage = \"\";\n\n  this.checkConditions = this.checkConditions.bind(this);\n  this.syncModeBrowserList = settings.syncModeBrowserList;\n  // for mock and unit test\n  if (nightwatch) {\n    this.client = nightwatch;\n  }\n\n  if (customizedSettings) {\n    this.syncModeBrowserList = customizedSettings.syncModeBrowserList;\n  }\n\n  if(this.client && this.client.queue && typeof(this.client.queue.instance === 'function')){\n    let instance = this.client.queue.instance();\n    if(instance && instance.currentNode){\n      this.stackTrace = instance.currentNode.stackTrace;\n    }\n  }\n};\n\nutil.inherits(Base, EventEmitter);\n\nBase.prototype.decide = function () {\n  const self = this;\n\n  this.nightwatchExecute = this.client.api.executeAsync;\n  this.executeSizzlejs = jsInjection.executeSizzlejsAsync;\n\n  const exam = (b, v, desiredCapabilities) => {\n    if (v) {\n      if (desiredCapabilities.browser\n        && parseInt(desiredCapabilities.browser_version) === parseInt(v)\n        && desiredCapabilities.browser.toLowerCase() === b) {\n        return true;\n      } else if (desiredCapabilities.browserName\n        && parseInt(desiredCapabilities.version) === parseInt(v)\n        && desiredCapabilities.browserName.toLowerCase() === b) {\n        return true;\n      }\n    } else {\n      /* eslint-disable  no-lonely-if */\n      if (desiredCapabilities.browser\n        && desiredCapabilities.browser.toLowerCase() === b) {\n        return true;\n      } else if (desiredCapabilities.browserName\n        && desiredCapabilities.browserName.toLowerCase() === b) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  _.forEach(this.syncModeBrowserList, (browser) => {\n    let b = null;\n    let v = null;\n    const cap = browser.split(\":\");\n    b = cap[0];\n    if (cap.length > 1) {\n      v = cap[1];\n    }\n\n    if (exam(b, v, self.client.desiredCapabilities)) {\n      self.isSync = true;\n      self.nightwatchExecute = self.client.api.execute;\n      self.executeSizzlejs = jsInjection.executeSizzlejsSync;\n    }\n\n  });\n};\n\nBase.prototype.checkConditions = function () {\n  const self = this;\n\n  this.execute(\n    this.executeSizzlejs,\n    [this.selector, this.injectedJsCommand()],\n    (result) => {\n      // Keep a running count of how many times we've seen this element visible\n      if (result.isVisible) {\n        self.seenCount += 1;\n      }\n\n      const elapsed = (new Date()).getTime() - self.startTime;\n\n      // If we've seen the selector enough times or waited too long, then\n      // it's time to pass or fail and continue the command chain.\n      if (result.seens >= JS_SEEN_MAX || self.seenCount >= SEEN_MAX || elapsed > MAX_TIMEOUT) {\n\n        // Unlike clickEl, only issue a warning in the getEl() version of this\n        if (result.selectorLength > 1) {\n          logger.warn(`getEl saw selector ${self.selector} but result length was `\n            + `${result.selectorLength}, with ${result.selectorVisibleLength} of those :visible`);\n          logger.warn(`Selector did not disambiguate after ${elapsed} milliseconds,`\n            + \" refine your selector or check DOM for problems.\");\n        }\n\n        if (self.seenCount >= SEEN_MAX || result.seens >= JS_SEEN_MAX) {\n\n          const elapse = (new Date()).getTime();\n          self.time.executeAsyncTime = elapse - self.startTime;\n          self.time.seleniumCallTime = 0;\n          self.do(result.value.value);\n        } else {\n          if(result.selectorLength === 1){\n            self.fail(\"[not visible]\", \"[visible]\", this.failureMessage + \"[SELECTOR_NOT_VISIBLE]\");\n          }else{\n            self.client.api.title(function(title){\n              if(title.value === 'Bad Gateway' || title.value === 'Can\\'t reach this page'){\n                self.fail(\"[bad gateway]\", \"[found]\", self.failureMessage + \"[BAD_GATEWAY]\");\n              }else{\n                self.fail(\"[not found]\", \"[found]\", self.failureMessage + \"[SELECTOR_NOT_FOUND]\");\n              }\n            });\n          }\n        }\n      } else {\n        setTimeout(self.checkConditions, WAIT_INTERVAL);\n      }\n    });\n};\n\nBase.prototype.execute = function (fn, args, callback) {\n  const self = this;\n\n  const innerArgs = _.cloneDeep(args);\n  const selector = selectorUtil.depageobjectize(innerArgs.shift(), this.client.locateStrategy);\n\n  innerArgs.unshift(selector);\n  innerArgs.push(jsInjection.getSizzlejsSource());\n  innerArgs.push(settings.JS_WAIT_INTERNAL);\n  innerArgs.push(settings.JS_SEEN_MAX);\n\n  this.nightwatchExecute(fn, innerArgs, (result) => {\n    if (settings.verbose) {\n      logger.log(`execute(${innerArgs}) intermediate result: ${JSON.stringify(result)}`);\n    }\n    /*eslint no-magic-numbers:0 */\n    if (result && result.status === 0 && result.value !== null) {\n      // Note: by checking the result and passing result.value to the callback,\n      // we are claiming that the result sent to the callback will always be truthy\n      // and useful, relieving the callback from needing to check the structural\n      // validity of result or result.value\n\n      callback.call(self, result.value);\n    } else if (result && result.status === -1\n      && result.errorStatus === 13 && result.value !== null) {\n      // errorStatus = 13: javascript error: document unloaded while waiting for result\n      // we want to reload the page\n      callback.call(self, {\n        seens: 0,\n        jsDuration: 0,\n        jsStepDuration: [],\n        isResultReset: true,\n        isVisibleStrict: null,\n        isVisible: false,\n        selectorVisibleLength: 0,\n        selectorLength: 0,\n        value: {\n          sel: null,\n          value: null\n        }\n      });\n    } else {\n      logger.warn(clc.yellowBright(\"\\u2622  Received error result from Selenium.\"\n        + \" Raw Selenium result object:\"));\n      let resultDisplay;\n      try {\n        resultDisplay = safeJsonStringify(result);\n      } catch (e) {\n        resultDisplay = util.inspect(result, false, null);\n      }\n      logger.warn(clc.yellowBright(resultDisplay));\n      self.fail(\"[selenium error]\", \"[visible]\", resultDisplay + \"[SELENIUM_ERROR]\");\n    }\n  });\n};\n\n/*eslint no-unused-vars:0 */\nBase.prototype.pass = function (actual, expected) {\n  const pactual = actual || \"visible\";\n  const pexpected = pactual;\n  const message = (this.isSync ? \"[sync mode] \" : \"\") + this.successMessage;\n\n  this.time.totalTime = (new Date()).getTime() - this.startTime;\n  this.client.assertion(true, pactual, pexpected, util.format(message, this.time.totalTime), true);\n\n  stats({\n    capabilities: this.client.options.desiredCapabilities,\n    type: \"command\",\n    cmd: this.cmd,\n    value: this.time\n  });\n\n  if (this.cb) {\n    this.cb.apply(this.client.api, [actual]);\n  }\n  this.emit(\"complete\");\n};\n\nBase.prototype.fail = function (actual, expected, failureMessage) {\n  const pactual = actual || \"not visible\";\n  const pexpected = expected || \"visible\";\n  const message = errorDictionary.format(util.format((this.isSync ? \"[sync mode] \" : \"\") + (failureMessage || this.failureMessage), this.time.totalTime));\n\n  this.time.totalTime = (new Date()).getTime() - this.startTime;\n  this.client.assertion(false, pactual, pexpected, message, true, this.stackTrace);\n\n  if (this.cb) {\n    this.cb.apply(this.client.api, []);\n  }\n  this.emit(\"complete\");\n};\n\n/**\n * All children have to implement injectedJsCommand\n *\n */\n/* istanbul ignore next */\n/*eslint no-unused-vars:0 */\nBase.prototype.injectedJsCommand = function ($el) {\n  return \"\";\n};\n\n\n/**\n * All children have to implement do\n *\n */\n/* istanbul ignore next */\n/*eslint no-unused-vars:0 */\nBase.prototype.do = function (value) {\n\n};\n\n/**\n * All children have to implement command\n *\n */\n/* istanbul ignore next */\n/*eslint no-unused-vars:0 */\nBase.prototype.command = function (selector, cb) {\n  return this;\n};\n\nmodule.exports = Base;\n"]}