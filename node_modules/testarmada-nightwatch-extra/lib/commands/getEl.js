"use strict";

var _util = require("util");

var _util2 = _interopRequireDefault(_util);

var _selector = require("../util/selector");

var _selector2 = _interopRequireDefault(_selector);

var _baseCommand = require("../base-command");

var _baseCommand2 = _interopRequireDefault(_baseCommand);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var GetEl = function GetEl() {
  var nightwatch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var customizedSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  _baseCommand2.default.call(this, nightwatch, customizedSettings);
  this.cmd = "getel";
};

_util2.default.inherits(GetEl, _baseCommand2.default);

GetEl.prototype.do = function (value) {
  this.pass(value);
};

/*eslint no-unused-vars:0 */
GetEl.prototype.injectedJsCommand = function ($el) {
  return "return $el.length > 0";
};

GetEl.prototype.command = function (selector, cb) {
  this.selector = _selector2.default.normalize(selector);
  this.cb = cb;

  this.successMessage = "Selector '" + this.selector + "' was visible after %d milliseconds.";
  this.failureMessage = "Selector '" + this.selector + "' was not visible after %d milliseconds.";

  this.startTime = new Date().getTime();

  // Track how many times we've seen selector as :visible
  this.seenCount = 0;
  this.decide();
  this.checkConditions();

  return this;
};

module.exports = GetEl;
//# sourceMappingURL=getEl.js.map