{"version":3,"sources":["../../src/commands/setElValue.js"],"names":["SetElValue","nightwatch","customizedSettings","call","cmd","inherits","prototype","do","magellanSel","self","now","Date","getTime","time","executeAsyncTime","startTime","client","api","setValue","selectorPrefix","valueToSet","seleniumCallTime","pass","command","selector","cb","normalize","successMessage","failureMessage","seenCount","decide","checkConditions","module","exports"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,SAAbA,UAAa,GAAwD;AAAA,MAA9CC,UAA8C,uEAAjC,IAAiC;AAAA,MAA3BC,kBAA2B,uEAAN,IAAM;;AACzE,oBAAQC,IAAR,CAAa,IAAb,EAAmBF,UAAnB,EAA+BC,kBAA/B;AACA,OAAKE,GAAL,GAAW,YAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcL,UAAd;;AAEAA,WAAWM,SAAX,CAAqBC,EAArB,GAA0B,UAAUC,WAAV,EAAuB;AAC/C,MAAMC,OAAO,IAAb;AACA,MAAMC,MAAO,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAZ;AACA,OAAKC,IAAL,CAAUC,gBAAV,GAA6BJ,MAAMD,KAAKM,SAAxC;AACA,OAAKC,MAAL,CAAYC,GAAZ,CACGC,QADH,CAEE,cAFF,QAGM,KAAKC,cAHX,UAG8BX,WAH9B,SAIE,KAAKY,UAJP,EAKE,YAAM;AACJX,SAAKI,IAAL,CAAUQ,gBAAV,GAA8B,IAAIV,IAAJ,EAAD,CAAaC,OAAb,KAAyBF,GAAtD;AACAD,SAAKa,IAAL;AACD,GARH;AASD,CAbD;;AAeAtB,WAAWM,SAAX,CAAqBiB,OAArB,GAA+B,UAAUC,QAAV,EAAoBJ,UAApB,EAAgCK,EAAhC,EAAoC;AACjE,OAAKD,QAAL,GAAgB,mBAAaE,SAAb,CAAuBF,QAAvB,CAAhB;AACA,OAAKJ,UAAL,GAAkBA,UAAlB;AACA,OAAKK,EAAL,GAAUA,EAAV;;AAEA,OAAKE,cAAL,GAAsB,eAAa,KAAKH,QAAlB,8BACb,KAAKJ,UADQ,6BAAtB;AAEA,OAAKQ,cAAL,GAAsB,eAAa,KAAKJ,QAAlB,wCACJ,KAAKJ,UADD,6BAAtB;;AAGA,OAAKL,SAAL,GAAkB,IAAIJ,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKiB,SAAL,GAAiB,CAAjB;AACA,OAAKC,MAAL;AACA,OAAKC,eAAL;;AAEA,SAAO,IAAP;AACD,CAlBD;;AAoBAC,OAAOC,OAAP,GAAiBjC,UAAjB","file":"setElValue.js","sourcesContent":["import util from \"util\";\n\nimport selectorUtil from \"../util/selector\";\nimport ClickEl from \"./clickEl\";\n\nconst SetElValue = function (nightwatch = null, customizedSettings = null) {\n  ClickEl.call(this, nightwatch, customizedSettings);\n  this.cmd = \"setelvalue\";\n};\n\nutil.inherits(SetElValue, ClickEl);\n\nSetElValue.prototype.do = function (magellanSel) {\n  const self = this;\n  const now = (new Date()).getTime();\n  this.time.executeAsyncTime = now - self.startTime;\n  this.client.api\n    .setValue(\n    \"css selector\",\n    `[${this.selectorPrefix}='${magellanSel}']`,\n    this.valueToSet,\n    () => {\n      self.time.seleniumCallTime = (new Date()).getTime() - now;\n      self.pass();\n    });\n};\n\nSetElValue.prototype.command = function (selector, valueToSet, cb) {\n  this.selector = selectorUtil.normalize(selector);\n  this.valueToSet = valueToSet;\n  this.cb = cb;\n\n  this.successMessage = `Selector <${this.selector}> set value to`\n    + ` [${this.valueToSet}] after %d milliseconds`;\n  this.failureMessage = `Selector <${this.selector}> could not set`\n    + ` value to [${this.valueToSet}] after %d milliseconds`;\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times we've seen selector as :visible\n  this.seenCount = 0;\n  this.decide();\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = SetElValue;\n"]}