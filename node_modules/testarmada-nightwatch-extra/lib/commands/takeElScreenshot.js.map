{"version":3,"sources":["../../src/commands/takeElScreenshot.js"],"names":["TakeElScreenshot","nightwatch","customizedSettings","call","cmd","inherits","prototype","do","magellanSel","self","now","Date","getTime","time","executeAsyncTime","startTime","sel","selectorPrefix","filepath","resolve","screenshotPath","sep","filename","client","api","getLocation","location","getElementSize","size","seleniumCallTime","screenshot","result","read","Buffer","value","err","image","fail","crop","x","y","width","height","write","pass","injectedJsCommand","$el","command","selector","cb","normalize","successMessage","failureMessage","seenCount","decide","checkConditions","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,GAAwD;AAAA,MAA9CC,UAA8C,uEAAjC,IAAiC;AAAA,MAA3BC,kBAA2B,uEAAN,IAAM;;AAC/E,kBAAMC,IAAN,CAAW,IAAX,EAAiBF,UAAjB,EAA6BC,kBAA7B;AACA,OAAKE,GAAL,GAAW,kBAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcL,gBAAd;;AAEA;AACAA,iBAAiBM,SAAjB,CAA2BC,EAA3B,GAAgC,UAAUC,WAAV,EAAuB;AACrD,MAAMC,OAAO,IAAb;AACA,MAAMC,MAAO,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAZ;AACA,OAAKC,IAAL,CAAUC,gBAAV,GAA6BJ,MAAMD,KAAKM,SAAxC;;AAEA,MAAMC,YAAU,KAAKC,cAAf,SAAiCT,WAAjC,MAAN;AACA,MAAMU,WAAW,eAAKC,OAAL,CAAa,MAAG,mBAASC,cAAT,GAA0B,eAAKC,GAAlC,KACvB,gCAAiBZ,KAAKa,QAAtB,CADuB,UAAb,CAAjB;;AAGA,OAAKC,MAAL,CAAYC,GAAZ,CAAgBC,WAAhB,CAA4BT,GAA5B,EAAiC,UAACU,QAAD,EAAc;AAC7CjB,SAAKc,MAAL,CAAYC,GAAZ,CAAgBG,cAAhB,CAA+BX,GAA/B,EAAoC,UAACY,IAAD,EAAU;AAC5CnB,WAAKI,IAAL,CAAUgB,gBAAV,GAA8B,IAAIlB,IAAJ,EAAD,CAAaC,OAAb,KAAyBF,GAAtD;;AAEAD,WAAKc,MAAL,CAAYC,GAAZ,CACGM,UADH,CACc,KADd,EACqB,UAACC,MAAD,EAAY;AAC7B,uBAAKC,IAAL,CAAU,IAAIC,MAAJ,CAAWF,OAAOG,KAAlB,EAAyB,QAAzB,CAAV,EAA8C,UAACC,GAAD,EAAMC,KAAN,EAAgB;;AAE5D,cAAID,GAAJ,EAAS;AACP1B,iBAAK4B,IAAL;AACD;;AAEDD,gBAAME,IAAN,CACEZ,SAASQ,KAAT,CAAeK,CADjB,EAEEb,SAASQ,KAAT,CAAeM,CAFjB,EAGEZ,KAAKM,KAAL,CAAWO,KAHb,EAIEb,KAAKM,KAAL,CAAWQ,MAJb,EAKGC,KALH,CAKSzB,QALT,EAKmB;AAAA,mBAAMT,KAAKmC,IAAL,EAAN;AAAA,WALnB;AAMD,SAZD;AAaD,OAfH;AAgBD,KAnBD;AAoBD,GArBD;AAsBD,CA/BD;;AAiCA;AACA5C,iBAAiBM,SAAjB,CAA2BuC,iBAA3B,GAA+C,UAAUC,GAAV,EAAe;AAC5D,SAAO,gEAAP;AACD,CAFD;;AAIA9C,iBAAiBM,SAAjB,CAA2ByC,OAA3B,GAAqC,UAAUC,QAAV,EAAoB1B,QAApB,EAA8B2B,EAA9B,EAAkC;AACrE,OAAKD,QAAL,GAAgB,mBAAaE,SAAb,CAAuBF,QAAvB,CAAhB;AACA,OAAK1B,QAAL,GAAgBA,QAAhB;AACA,OAAK2B,EAAL,GAAUA,EAAV;;AAEA,OAAKE,cAAL,GAAsB,8BAA4B,KAAKH,QAAjC,UAClB,gCADJ;AAEA,OAAKI,cAAL,GAAsB,mDACd,KAAKJ,QADS,6BAAtB;;AAGA,OAAKjC,SAAL,GAAkB,IAAIJ,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKyC,SAAL,GAAiB,CAAjB;AACA,OAAKC,MAAL;AACA,OAAKC,eAAL;;AAEA,SAAO,IAAP;AACD,CAlBD;;AAoBAC,OAAOC,OAAP,GAAiBzD,gBAAjB","file":"takeElScreenshot.js","sourcesContent":["import jimp from \"jimp\";\nimport path from \"path\";\nimport util from \"util\";\nimport sanitizeFilename from \"sanitize-filename\";\n\nimport selectorUtil from \"../util/selector\";\nimport settings from \"../settings\";\nimport GetEl from \"./getEl\";\n\nconst TakeElScreenshot = function (nightwatch = null, customizedSettings = null) {\n  GetEl.call(this, nightwatch, customizedSettings);\n  this.cmd = \"takeelscreenshot\";\n};\n\nutil.inherits(TakeElScreenshot, GetEl);\n\n/*eslint-disable max-nested-callbacks*/\nTakeElScreenshot.prototype.do = function (magellanSel) {\n  const self = this;\n  const now = (new Date()).getTime();\n  this.time.executeAsyncTime = now - self.startTime;\n\n  const sel = `[${this.selectorPrefix}=${magellanSel}]`;\n  const filepath = path.resolve(`${settings.screenshotPath + path.sep}`\n    + `${sanitizeFilename(self.filename)}.png`);\n\n  this.client.api.getLocation(sel, (location) => {\n    self.client.api.getElementSize(sel, (size) => {\n      self.time.seleniumCallTime = (new Date()).getTime() - now;\n\n      self.client.api\n        .screenshot(false, (result) => {\n          jimp.read(new Buffer(result.value, \"base64\"), (err, image) => {\n\n            if (err) {\n              self.fail();\n            }\n\n            image.crop(\n              location.value.x,\n              location.value.y,\n              size.value.width,\n              size.value.height)\n              .write(filepath, () => self.pass());\n          });\n        });\n    });\n  });\n};\n\n/*eslint no-unused-vars:0 */\nTakeElScreenshot.prototype.injectedJsCommand = function ($el) {\n  return \"return $el[0].getAttribute('data-magellan-temp-automation-id')\";\n};\n\nTakeElScreenshot.prototype.command = function (selector, filename, cb) {\n  this.selector = selectorUtil.normalize(selector);\n  this.filename = filename;\n  this.cb = cb;\n\n  this.successMessage = `Screenshot for selector <${this.selector}> `\n    + \"is taken after %d milliseconds\";\n  this.failureMessage = \"Failed to take screenshot for selector \"\n    + `<${this.selector}> after %d milliseconds`;\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times we've seen selector as :visible\n  this.seenCount = 0;\n  this.decide();\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = TakeElScreenshot;\n"]}