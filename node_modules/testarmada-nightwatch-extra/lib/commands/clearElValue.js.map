{"version":3,"sources":["../../src/commands/clearElValue.js"],"names":["ClearElValue","nightwatch","customizedSettings","call","cmd","inherits","prototype","do","magellanSel","self","now","Date","getTime","time","executeAsyncTime","startTime","client","api","clearValue","selectorPrefix","seleniumCallTime","pass","injectedJsCommand","$el","sizzle","command","selector","cb","normalize","successMessage","failureMessage","seenCount","decide","checkConditions","module","exports"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,GAAwD;AAAA,MAA9CC,UAA8C,uEAAjC,IAAiC;AAAA,MAA3BC,kBAA2B,uEAAN,IAAM;;AAC3E,oBAAQC,IAAR,CAAa,IAAb,EAAmBF,UAAnB,EAA+BC,kBAA/B;AACA,OAAKE,GAAL,GAAW,cAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcL,YAAd;;AAEAA,aAAaM,SAAb,CAAuBC,EAAvB,GAA4B,UAAUC,WAAV,EAAuB;AACjD,MAAMC,OAAO,IAAb;AACA,MAAMC,MAAO,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAZ;AACA,OAAKC,IAAL,CAAUC,gBAAV,GAA6BJ,MAAMD,KAAKM,SAAxC;;AAEA,OAAKC,MAAL,CAAYC,GAAZ,CACGC,UADH,CAEE,cAFF,QAGO,KAAKC,cAHZ,UAGiCX,WAHjC,SAIE,YAAM;AACJC,SAAKI,IAAL,CAAUO,gBAAV,GAA8B,IAAIT,IAAJ,EAAD,CAAaC,OAAb,KAAyBF,GAAtD;AACAD,SAAKY,IAAL;AACD,GAPH;AAQD,CAbD;;AAeA;AACArB,aAAaM,SAAb,CAAuBgB,iBAAvB,GAA2C,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAChE,SAAO,mFAAP;AACD,CAFD;;AAIAxB,aAAaM,SAAb,CAAuBmB,OAAvB,GAAiC,UAAUC,QAAV,EAAoBC,EAApB,EAAwB;AACvD,OAAKD,QAAL,GAAgB,mBAAaE,SAAb,CAAuBF,QAAvB,CAAhB;AACA,OAAKC,EAAL,GAAUA,EAAV;;AAEA,OAAKE,cAAL,kBAAoC,KAAKH,QAAzC;AACA,OAAKI,cAAL,kBAAoC,KAAKJ,QAAzC;;AAEA,OAAKX,SAAL,GAAkB,IAAIJ,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKmB,SAAL,GAAiB,CAAjB;AACA,OAAKC,MAAL;AACA,OAAKC,eAAL;;AAEA,SAAO,IAAP;AACD,CAfD;;AAiBAC,OAAOC,OAAP,GAAiBnC,YAAjB","file":"clearElValue.js","sourcesContent":["import util from \"util\";\n\nimport selectorUtil from \"../util/selector\";\nimport ClickEl from \"./clickEl\";\n\nconst ClearElValue = function (nightwatch = null, customizedSettings = null) {\n  ClickEl.call(this, nightwatch, customizedSettings);\n  this.cmd = \"clearelvalue\";\n};\n\nutil.inherits(ClearElValue, ClickEl);\n\nClearElValue.prototype.do = function (magellanSel) {\n  const self = this;\n  const now = (new Date()).getTime();\n  this.time.executeAsyncTime = now - self.startTime;\n\n  this.client.api\n    .clearValue(\n    \"css selector\",\n    `[${ this.selectorPrefix }='${ magellanSel }']`,\n    () => {\n      self.time.seleniumCallTime = (new Date()).getTime() - now;\n      self.pass();\n    });\n};\n\n/*eslint no-unused-vars:0 */\nClearElValue.prototype.injectedJsCommand = function ($el, sizzle) {\n  return \"$el[0].value = '';return $el[0].getAttribute('data-magellan-temp-automation-id');\";\n};\n\nClearElValue.prototype.command = function (selector, cb) {\n  this.selector = selectorUtil.normalize(selector);\n  this.cb = cb;\n\n  this.successMessage = `Selector <${ this.selector }> value is cleared after %d milliseconds`;\n  this.failureMessage = `Selector <${ this.selector }> could not clear value after %d milliseconds`;\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times we've seen selector as :visible\n  this.seenCount = 0;\n  this.decide();\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = ClearElValue;\n"]}