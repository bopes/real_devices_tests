{"version":3,"sources":["../../src/commands/takeScreenshot.js"],"names":["TakeScreenshot","nightwatch","customizedSettings","call","cmd","inherits","prototype","injectedJsCommand","$el","command","title","cb","successMessage","failureMessage","filename","filepath","screenshotPath","sep","self","startTime","Date","getTime","client","api","saveScreenshot","apply","pass","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,iBAAiB,SAAjBA,cAAiB,GAAwD;AAAA,MAA9CC,UAA8C,uEAAjC,IAAiC;AAAA,MAA3BC,kBAA2B,uEAAN,IAAM;;AAC7E,wBAAYC,IAAZ,CAAiB,IAAjB,EAAuBF,UAAvB,EAAmCC,kBAAnC;AACA,OAAKE,GAAL,GAAW,gBAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcL,cAAd;;AAEA;AACAA,eAAeM,SAAf,CAAyBC,iBAAzB,GAA6C,UAAUC,GAAV,EAAe;AAC1D,SAAO,uBAAP;AACD,CAFD;;AAIAR,eAAeM,SAAf,CAAyBG,OAAzB,GAAmC,UAAUC,KAAV,EAAiBC,EAAjB,EAAqB;AACtD,OAAKA,EAAL,GAAUA,EAAV;;AAEA,OAAKC,cAAL,GAAsB,0CAAtB;AACA,OAAKC,cAAL,GAAsB,oDAAtB;;AAEA,MAAMC,WAAc,gCAAiBJ,KAAjB,CAAd,SAAN;AACA,MAAMK,WAAW,mBAASC,cAAT,GAA0B,eAAKC,GAA/B,GAAqCH,QAAtD;AACA,MAAMI,OAAO,IAAb;;AAEA,OAAKC,SAAL,GAAkB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA,OAAKC,MAAL,CAAYC,GAAZ,CACGC,cADH,CACkBT,QADlB,EAC4B,YAAM;AAC9B,QAAIG,KAAKP,EAAT,EAAa;AACXO,WAAKP,EAAL,CAAQc,KAAR,CAAcP,KAAKI,MAAL,CAAYC,GAA1B,EAA+B,EAA/B;AACD;AACDL,SAAKQ,IAAL,CAAU,iBAAV;AACD,GANH;;AAQA,SAAO,IAAP;AACD,CArBD;;AAuBAC,OAAOC,OAAP,GAAiB5B,cAAjB","file":"takeScreenshot.js","sourcesContent":["import util from \"util\";\nimport path from \"path\";\nimport sanitizeFilename from \"sanitize-filename\";\n\nimport selectorUtil from \"../util/selector\";\nimport BaseCommand from \"../base-command\";\nimport settings from \"../settings\";\n\nconst TakeScreenshot = function (nightwatch = null, customizedSettings = null) {\n  BaseCommand.call(this, nightwatch, customizedSettings);\n  this.cmd = \"takescreenshot\";\n};\n\nutil.inherits(TakeScreenshot, BaseCommand);\n\n/*eslint no-unused-vars:0 */\nTakeScreenshot.prototype.injectedJsCommand = function ($el) {\n  return \"return $el.length > 0\";\n};\n\nTakeScreenshot.prototype.command = function (title, cb) {\n  this.cb = cb;\n\n  this.successMessage = \"Took a screenshot after %d milliseconds.\";\n  this.failureMessage = \"Failed to take a screenshot after %d milliseconds.\";\n\n  const filename = `${sanitizeFilename(title) }.png`;\n  const filepath = settings.screenshotPath + path.sep + filename;\n  const self = this;\n\n  this.startTime = (new Date()).getTime();\n\n  this.client.api\n    .saveScreenshot(filepath, () => {\n      if (self.cb) {\n        self.cb.apply(self.client.api, []);\n      }\n      self.pass(\"save screenshot\");\n    });\n\n  return this;\n};\n\nmodule.exports = TakeScreenshot;\n"]}