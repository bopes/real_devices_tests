{"version":3,"sources":["../../src/commands/waitForElNotPresent.js"],"names":["MAX_TIMEOUT","COMMAND_MAX_TIMEOUT","WAIT_INTERVAL","WautForElNotPresent","nightwatch","customizedSettings","call","cmd","inherits","prototype","do","value","pass","checkConditions","self","execute","executeSizzlejs","selector","injectedJsCommand","result","elapsed","Date","getTime","startTime","isVisibleStrict","elapse","time","executeAsyncTime","seleniumCallTime","fail","setTimeout","$el","command","cb","normalize","successMessage","failureMessage","seenCount","decide","module","exports"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,mBAASC,mBAA7B;AACA,IAAMC,gBAAgB,mBAASA,aAA/B;;AAEA,IAAMC,sBAAsB,SAAtBA,mBAAsB,GAAwD;AAAA,MAA9CC,UAA8C,uEAAjC,IAAiC;AAAA,MAA3BC,kBAA2B,uEAAN,IAAM;;AAClF,wBAAYC,IAAZ,CAAiB,IAAjB,EAAuBF,UAAvB,EAAmCC,kBAAnC;AACA,OAAKE,GAAL,GAAW,0BAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcL,mBAAd;;AAEAA,oBAAoBM,SAApB,CAA8BC,EAA9B,GAAmC,UAAUC,KAAV,EAAiB;AAClD,OAAKC,IAAL,CAAUD,KAAV;AACD,CAFD;;AAIAR,oBAAoBM,SAApB,CAA8BI,eAA9B,GAAgD,YAAY;AAC1D,MAAMC,OAAO,IAAb;;AAEA,OAAKC,OAAL,CACE,KAAKC,eADP,EAEE,CAAC,KAAKC,QAAN,EAAgB,KAAKC,iBAAL,EAAhB,CAFF,EAGE,UAACC,MAAD,EAAY;AACV,QAAMC,UAAW,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyBR,KAAKS,SAA9C;;AAEA,QAAIJ,OAAOK,eAAP,KAA2B,KAA3B,IAAoCJ,UAAUpB,WAAlD,EAA+D;;AAE7D,UAAImB,OAAOK,eAAP,KAA2B,KAA/B,EAAsC;AACpC,YAAMC,SAAU,IAAIJ,IAAJ,EAAD,CAAaC,OAAb,EAAf;AACAR,aAAKY,IAAL,CAAUC,gBAAV,GAA6BF,SAASX,KAAKS,SAA3C;AACAT,aAAKY,IAAL,CAAUE,gBAAV,GAA6B,CAA7B;AACAd,aAAKJ,EAAL,CAAQ,aAAR;AACD,OALD,MAKO;AACLI,aAAKe,IAAL,CAAU,aAAV,EAAyB,eAAzB;AACD;AACF,KAVD,MAUO;AACLC,iBAAWhB,KAAKD,eAAhB,EAAiCX,aAAjC;AACD;AACF,GAnBH;AAoBD,CAvBD;;AAyBA;AACAC,oBAAoBM,SAApB,CAA8BS,iBAA9B,GAAkD,UAAUa,GAAV,EAAe;AAC/D,SAAO,mBAAP;AACD,CAFD;;AAIA5B,oBAAoBM,SAApB,CAA8BuB,OAA9B,GAAwC,UAAUf,QAAV,EAAoBgB,EAApB,EAAwB;AAC9D,OAAKhB,QAAL,GAAgB,mBAAaiB,SAAb,CAAuBjB,QAAvB,CAAhB;AACA,OAAKgB,EAAL,GAAUA,EAAV;;AAEA,OAAKE,cAAL,GAAsB,eAAa,KAAKlB,QAAlB,kCAClB,yBADJ;AAEA,OAAKmB,cAAL,kBAAmC,KAAKnB,QAAxC;;AAEA,OAAKM,SAAL,GAAkB,IAAIF,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKe,SAAL,GAAiB,CAAjB;AACA,OAAKC,MAAL;AACA,OAAKzB,eAAL;;AAEA,SAAO,IAAP;AACD,CAhBD;;AAkBA0B,OAAOC,OAAP,GAAiBrC,mBAAjB","file":"waitForElNotPresent.js","sourcesContent":["import util from \"util\";\n\nimport selectorUtil from \"../util/selector\";\nimport BaseCommand from \"../base-command\";\nimport settings from \"../settings\";\n\nconst MAX_TIMEOUT = settings.COMMAND_MAX_TIMEOUT;\nconst WAIT_INTERVAL = settings.WAIT_INTERVAL;\n\nconst WautForElNotPresent = function (nightwatch = null, customizedSettings = null) {\n  BaseCommand.call(this, nightwatch, customizedSettings);\n  this.cmd = \"waitforelementnotpresent\";\n};\n\nutil.inherits(WautForElNotPresent, BaseCommand);\n\nWautForElNotPresent.prototype.do = function (value) {\n  this.pass(value);\n};\n\nWautForElNotPresent.prototype.checkConditions = function () {\n  const self = this;\n\n  this.execute(\n    this.executeSizzlejs,\n    [this.selector, this.injectedJsCommand()],\n    (result) => {\n      const elapsed = (new Date()).getTime() - self.startTime;\n\n      if (result.isVisibleStrict === false || elapsed > MAX_TIMEOUT) {\n\n        if (result.isVisibleStrict === false) {\n          const elapse = (new Date()).getTime();\n          self.time.executeAsyncTime = elapse - self.startTime;\n          self.time.seleniumCallTime = 0;\n          self.do(\"not present\");\n        } else {\n          self.fail(\"not present\", \"still present\");\n        }\n      } else {\n        setTimeout(self.checkConditions, WAIT_INTERVAL);\n      }\n    });\n};\n\n/*eslint no-unused-vars:0 */\nWautForElNotPresent.prototype.injectedJsCommand = function ($el) {\n  return \"return $el.length\";\n};\n\nWautForElNotPresent.prototype.command = function (selector, cb) {\n  this.selector = selectorUtil.normalize(selector);\n  this.cb = cb;\n\n  this.successMessage = `Selector '${this.selector}' successfully disappeared`\n    + \" after %d milliseconds.\";\n  this.failureMessage = `Selector '${this.selector}' failed to disappear after %d milliseconds.`;\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times we've seen selector as :visible\n  this.seenCount = 0;\n  this.decide();\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = WautForElNotPresent;\n"]}