{"version":3,"sources":["../../src/commands/getElValue.js"],"names":["GetElValue","nightwatch","customizedSettings","call","cmd","inherits","prototype","do","value","pass","injectedJsCommand","$el","sizzle","actual","time","totalTime","Date","getTime","startTime","client","assertion","format","successMessage","capabilities","options","desiredCapabilities","type","cb","apply","api","selector","emit","command","normalize","failureMessage","seenCount","decide","checkConditions","module","exports"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,SAAbA,UAAa,GAAwD;AAAA,MAA9CC,UAA8C,uEAAjC,IAAiC;AAAA,MAA3BC,kBAA2B,uEAAN,IAAM;;AACzE,wBAAYC,IAAZ,CAAiB,IAAjB,EAAuBF,UAAvB,EAAmCC,kBAAnC;AACA,OAAKE,GAAL,GAAW,YAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcL,UAAd;;AAEAA,WAAWM,SAAX,CAAqBC,EAArB,GAA0B,UAAUC,KAAV,EAAiB;AACzC,OAAKC,IAAL,CAAUD,KAAV;AACD,CAFD;;AAIA;AACAR,WAAWM,SAAX,CAAqBI,iBAArB,GAAyC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAC9D,SAAO,4BAAP;AACD,CAFD;;AAIAZ,WAAWM,SAAX,CAAqBG,IAArB,GAA4B,UAAUI,MAAV,EAAkB;AAC5C,OAAKC,IAAL,CAAUC,SAAV,GAAuB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyB,KAAKC,SAApD;AACA,OAAKC,MAAL,CAAYC,SAAZ,CAAsB,IAAtB,EAA4BP,MAA5B,EAAoCA,MAApC,EACE,eAAKQ,MAAL,CAAY,KAAKC,cAAjB,EAAiC,KAAKR,IAAL,CAAUC,SAA3C,CADF,EACyD,IADzD;;AAGA,uBAAM;AACJQ,kBAAc,KAAKJ,MAAL,CAAYK,OAAZ,CAAoBC,mBAD9B;AAEJC,UAAM,SAFF;AAGJtB,SAAK,KAAKA,GAHN;AAIJI,WAAO,KAAKM;AAJR,GAAN;;AAOA,MAAI,KAAKa,EAAT,EAAa;AACX,SAAKA,EAAL,CAAQC,KAAR,CAAc,KAAKT,MAAL,CAAYU,GAA1B,EAA+B,CAAChB,MAAD,EAAS,KAAKiB,QAAd,CAA/B;AACD;AACD,OAAKC,IAAL,CAAU,UAAV;AACD,CAhBD;;AAkBA/B,WAAWM,SAAX,CAAqB0B,OAArB,GAA+B,UAAUF,QAAV,EAAoBH,EAApB,EAAwB;AACrD,OAAKG,QAAL,GAAgB,mBAAaG,SAAb,CAAuBH,QAAvB,CAAhB;AACA,OAAKH,EAAL,GAAUA,EAAV;;AAEA,OAAKL,cAAL,kBAAmC,KAAKQ,QAAxC;AACA,OAAKI,cAAL,kBAAmC,KAAKJ,QAAxC;;AAEA,OAAKZ,SAAL,GAAkB,IAAIF,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKkB,SAAL,GAAiB,CAAjB;AACA,OAAKC,MAAL;AACA,OAAKC,eAAL;;AAEA,SAAO,IAAP;AACD,CAfD;;AAiBAC,OAAOC,OAAP,GAAiBvC,UAAjB","file":"getElValue.js","sourcesContent":["import util from \"util\";\n\nimport selectorUtil from \"../util/selector\";\nimport BaseCommand from \"../base-command\";\nimport stats from \"../util/stats\";\n\nconst GetElValue = function (nightwatch = null, customizedSettings = null) {\n  BaseCommand.call(this, nightwatch, customizedSettings);\n  this.cmd = \"getelvalue\";\n};\n\nutil.inherits(GetElValue, BaseCommand);\n\nGetElValue.prototype.do = function (value) {\n  this.pass(value);\n};\n\n/*eslint no-unused-vars:0 */\nGetElValue.prototype.injectedJsCommand = function ($el, sizzle) {\n  return \"return sizzle.getText($el)\";\n};\n\nGetElValue.prototype.pass = function (actual) {\n  this.time.totalTime = (new Date()).getTime() - this.startTime;\n  this.client.assertion(true, actual, actual,\n    util.format(this.successMessage, this.time.totalTime), true);\n\n  stats({\n    capabilities: this.client.options.desiredCapabilities,\n    type: \"command\",\n    cmd: this.cmd,\n    value: this.time\n  });\n\n  if (this.cb) {\n    this.cb.apply(this.client.api, [actual, this.selector]);\n  }\n  this.emit(\"complete\");\n};\n\nGetElValue.prototype.command = function (selector, cb) {\n  this.selector = selectorUtil.normalize(selector);\n  this.cb = cb;\n\n  this.successMessage = `Selector '${this.selector}' was visible after %d milliseconds.`;\n  this.failureMessage = `Selector '${this.selector}' was not visible after %d milliseconds.`;\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times we've seen selector as :visible\n  this.seenCount = 0;\n  this.decide();\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = GetElValue;\n"]}