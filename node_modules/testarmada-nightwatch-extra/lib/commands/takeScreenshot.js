"use strict";

var _util = require("util");

var _util2 = _interopRequireDefault(_util);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _sanitizeFilename = require("sanitize-filename");

var _sanitizeFilename2 = _interopRequireDefault(_sanitizeFilename);

var _selector = require("../util/selector");

var _selector2 = _interopRequireDefault(_selector);

var _baseCommand = require("../base-command");

var _baseCommand2 = _interopRequireDefault(_baseCommand);

var _settings = require("../settings");

var _settings2 = _interopRequireDefault(_settings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TakeScreenshot = function TakeScreenshot() {
  var nightwatch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var customizedSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  _baseCommand2.default.call(this, nightwatch, customizedSettings);
  this.cmd = "takescreenshot";
};

_util2.default.inherits(TakeScreenshot, _baseCommand2.default);

/*eslint no-unused-vars:0 */
TakeScreenshot.prototype.injectedJsCommand = function ($el) {
  return "return $el.length > 0";
};

TakeScreenshot.prototype.command = function (title, cb) {
  this.cb = cb;

  this.successMessage = "Took a screenshot after %d milliseconds.";
  this.failureMessage = "Failed to take a screenshot after %d milliseconds.";

  var filename = (0, _sanitizeFilename2.default)(title) + ".png";
  var filepath = _settings2.default.screenshotPath + _path2.default.sep + filename;
  var self = this;

  this.startTime = new Date().getTime();

  this.client.api.saveScreenshot(filepath, function () {
    if (self.cb) {
      self.cb.apply(self.client.api, []);
    }
    self.pass("save screenshot");
  });

  return this;
};

module.exports = TakeScreenshot;
//# sourceMappingURL=takeScreenshot.js.map