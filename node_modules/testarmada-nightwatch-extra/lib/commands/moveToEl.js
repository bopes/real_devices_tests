"use strict";

var _util = require("util");

var _util2 = _interopRequireDefault(_util);

var _selector = require("../util/selector");

var _selector2 = _interopRequireDefault(_selector);

var _clickEl = require("./clickEl");

var _clickEl2 = _interopRequireDefault(_clickEl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MoveToEl = function MoveToEl() {
  var nightwatch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var customizedSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  _clickEl2.default.call(this, nightwatch, customizedSettings);
  this.cmd = "movetoel";
};

_util2.default.inherits(MoveToEl, _clickEl2.default);

MoveToEl.prototype.do = function (magellanSel) {
  var self = this;
  var now = new Date().getTime();
  this.time.executeAsyncTime = now - self.startTime;

  this.client.api.moveToElement("css selector", "[" + this.selectorPrefix + "='" + magellanSel + "']", this.xoffset, this.yoffset, function () {
    self.time.seleniumCallTime = new Date().getTime() - now;
    self.pass();
  });
};

/*eslint max-params:["error", 4] */
MoveToEl.prototype.command = function (selector, xoffset, yoffset, cb) {
  this.selector = _selector2.default.normalize(selector);
  this.cb = cb;

  this.xoffset = xoffset;
  this.yoffset = yoffset;

  this.successMessage = "Moved to selector <" + this.selector + "> after %d milliseconds";
  this.failureMessage = "Could not move to selector <" + this.selector + "> after %d milliseconds";

  this.startTime = new Date().getTime();

  // Track how many times we've seen selector as :visible
  this.seenCount = 0;
  this.decide();
  this.checkConditions();

  return this;
};

module.exports = MoveToEl;
//# sourceMappingURL=moveToEl.js.map