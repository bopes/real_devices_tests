{"version":3,"sources":["../../../src/commands/mobile/getMobileElConditional.js"],"names":["WAIT_INTERVAL","SEEN_MAX","GetMobileElConditional","nightwatch","call","cmd","inherits","prototype","do","value","pass","checkConditions","self","options","path","client","sessionId","method","data","using","selector","protocol","result","status","seenCount","elapsed","Date","getTime","startTime","maxTimeout","elapse","time","executeAsyncTime","seleniumCallTime","setTimeout","command","cb","successMessage","failureMessage","actual","totalTime","assertion","format","apply","api","emit","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,gBAAgB,mBAASA,aAA/B;AACA,IAAMC,WAAW,CAAjB;;AAEA,IAAMC,yBAAyB,SAAzBA,sBAAyB,GAA6B;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AAC1D,8BAAYC,IAAZ,CAAiB,IAAjB,EAAuBD,UAAvB;AACA,OAAKE,GAAL,GAAW,wBAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcJ,sBAAd;;AAEAA,uBAAuBK,SAAvB,CAAiCC,EAAjC,GAAsC,UAAUC,KAAV,EAAiB;AACrD,OAAKC,IAAL,CAAUD,KAAV;AACD,CAFD;;AAIAP,uBAAuBK,SAAvB,CAAiCI,eAAjC,GAAmD,YAAY;AAC7D,MAAMC,OAAO,IAAb;;AAEA,MAAMC,UAAU;AACdC,wBAAkB,KAAKC,MAAL,CAAYC,SAA9B,aADc;AAEdC,YAAQ,MAFM;AAGdC,UAAM;AACJC,aAAO,KAAKA,KADR;AAEJV,aAAO,KAAKW;AAFR;AAHQ,GAAhB;;AASAR,OAAKS,QAAL,CAAcR,OAAd,EAAuB,UAACS,MAAD,EAAY;AACjC,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvB;AACAX,WAAKY,SAAL,IAAkB,CAAlB;AACD;;AAED,QAAMC,UAAW,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyBf,KAAKgB,SAA9C;AACA,QAAIhB,KAAKY,SAAL,IAAkBvB,QAAlB,IAA8BwB,UAAUb,KAAKiB,UAAjD,EAA6D;AAC3D,UAAIjB,KAAKY,SAAL,IAAkBvB,QAAtB,EAAgC;AAC9B,YAAM6B,SAAU,IAAIJ,IAAJ,EAAD,CAAaC,OAAb,EAAf;AACAf,aAAKmB,IAAL,CAAUC,gBAAV,GAA6BF,SAASlB,KAAKgB,SAA3C;AACAhB,aAAKmB,IAAL,CAAUE,gBAAV,GAA6B,CAA7B;AACArB,aAAKJ,EAAL,CAAQ,IAAR;AACD,OALD,MAKO;AACLI,aAAKJ,EAAL,CAAQ,KAAR;AACD;AACF,KATD,MASO;AACL0B,iBAAWtB,KAAKD,eAAhB,EAAiCX,aAAjC;AACD;AACF,GAnBD;AAoBD,CAhCD;AAiCA;AACAE,uBAAuBK,SAAvB,CAAiC4B,OAAjC,GAA2C,UAAUhB,KAAV,EAAiBC,QAAjB,EAA2BS,UAA3B,EAAuCO,EAAvC,EAA2C;AACpF,OAAKhB,QAAL,GAAgBA,QAAhB;AACA,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKU,UAAL,GAAkBA,UAAlB;AACA,OAAKO,EAAL,GAAUA,EAAV;;AAEA,OAAKC,cAAL,GAAsB,eAAa,KAAKlB,KAAlB,SAA2B,KAAKC,QAAhC,UAClB,oCADJ;AAEA,OAAKkB,cAAL,GAAsB,eAAa,KAAKnB,KAAlB,SAA2B,KAAKC,QAAhC,UAClB,wCADJ;;AAGA,OAAKQ,SAAL,GAAkB,IAAIF,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKH,SAAL,GAAiB,CAAjB;AACA,OAAKb,eAAL;;AAEA,SAAO,IAAP;AACD,CAlBD;;AAoBAT,uBAAuBK,SAAvB,CAAiCG,IAAjC,GAAwC,UAAU6B,MAAV,EAAkB;AACxD,OAAKR,IAAL,CAAUS,SAAV,GAAuB,IAAId,IAAJ,EAAD,CAAaC,OAAb,KAAyB,KAAKC,SAApD;AACA,MAAIW,MAAJ,EAAY;AACV,SAAKxB,MAAL,CAAY0B,SAAZ,CAAsB,IAAtB,EAA4BF,MAA5B,EAAoCA,MAApC,EACE,eAAKG,MAAL,CAAY,KAAKL,cAAjB,EAAiC,KAAKN,IAAL,CAAUS,SAA3C,CADF,EACyD,IADzD;AAED,GAHD,MAGO;AACL,SAAKzB,MAAL,CAAY0B,SAAZ,CAAsB,IAAtB,EAA4BF,MAA5B,EAAoCA,MAApC,EACE,eAAKG,MAAL,CAAY,KAAKJ,cAAjB,EAAiC,KAAKP,IAAL,CAAUS,SAA3C,CADF,EACyD,IADzD;AAED;;AAED,MAAI,KAAKJ,EAAT,EAAa;AACX,SAAKA,EAAL,CAAQO,KAAR,CAAc,KAAK5B,MAAL,CAAY6B,GAA1B,EAA+B,CAACL,MAAD,CAA/B;AACD;AACD,OAAKM,IAAL,CAAU,UAAV;AACD,CAdD;;AAgBAC,OAAOC,OAAP,GAAiB7C,sBAAjB","file":"getMobileElConditional.js","sourcesContent":["import util from \"util\";\nimport BaseCommand from \"../../base-mobile-command\";\nimport settings from \"../../settings\";\n\nconst WAIT_INTERVAL = settings.WAIT_INTERVAL;\nconst SEEN_MAX = 3;\n\nconst GetMobileElConditional = function (nightwatch = null) {\n  BaseCommand.call(this, nightwatch);\n  this.cmd = \"getmobileelconditional\";\n};\n\nutil.inherits(GetMobileElConditional, BaseCommand);\n\nGetMobileElConditional.prototype.do = function (value) {\n  this.pass(value);\n};\n\nGetMobileElConditional.prototype.checkConditions = function () {\n  const self = this;\n\n  const options = {\n    path: `/session/${this.client.sessionId}/element`,\n    method: \"POST\",\n    data: {\n      using: this.using,\n      value: this.selector\n    }\n  };\n\n  self.protocol(options, (result) => {\n    if (result.status === 0) {\n      // sucessful\n      self.seenCount += 3;\n    }\n\n    const elapsed = (new Date()).getTime() - self.startTime;\n    if (self.seenCount >= SEEN_MAX || elapsed > self.maxTimeout) {\n      if (self.seenCount >= SEEN_MAX) {\n        const elapse = (new Date()).getTime();\n        self.time.executeAsyncTime = elapse - self.startTime;\n        self.time.seleniumCallTime = 0;\n        self.do(true);\n      } else {\n        self.do(false);\n      }\n    } else {\n      setTimeout(self.checkConditions, WAIT_INTERVAL);\n    }\n  });\n};\n/*eslint max-params:[\"error\", 5] */\nGetMobileElConditional.prototype.command = function (using, selector, maxTimeout, cb) {\n  this.selector = selector;\n  this.using = using;\n  this.maxTimeout = maxTimeout;\n  this.cb = cb;\n\n  this.successMessage = `Selector '${this.using}:${this.selector}' `\n    + \"was visible after %d milliseconds.\";\n  this.failureMessage = `Selector '${this.using}:${this.selector}' `\n    + \"was not visible after %d milliseconds.\";\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times selector is successfully checked by /element protocol\n  this.seenCount = 0;\n  this.checkConditions();\n\n  return this;\n};\n\nGetMobileElConditional.prototype.pass = function (actual) {\n  this.time.totalTime = (new Date()).getTime() - this.startTime;\n  if (actual) {\n    this.client.assertion(true, actual, actual,\n      util.format(this.successMessage, this.time.totalTime), true);\n  } else {\n    this.client.assertion(true, actual, actual,\n      util.format(this.failureMessage, this.time.totalTime), true);\n  }\n\n  if (this.cb) {\n    this.cb.apply(this.client.api, [actual]);\n  }\n  this.emit(\"complete\");\n};\n\nmodule.exports = GetMobileElConditional;\n"]}