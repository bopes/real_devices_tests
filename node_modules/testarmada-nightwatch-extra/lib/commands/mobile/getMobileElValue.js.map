{"version":3,"sources":["../../../src/commands/mobile/getMobileElValue.js"],"names":["GetMobileElValue","nightwatch","call","cmd","inherits","prototype","do","value","self","client","api","elementIdValue","ELEMENT","result","status","pass","errorMsg","error","indexOf","failureMessage","fail","command","using","selector","cb","successMessage","startTime","Date","getTime","seenCount","checkConditions","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAMA,mBAAmB,SAAnBA,gBAAmB,GAA6B;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AACpD,8BAAYC,IAAZ,CAAiB,IAAjB,EAAuBD,UAAvB;AACA,OAAKE,GAAL,GAAW,cAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcJ,gBAAd;;AAEAA,iBAAiBK,SAAjB,CAA2BC,EAA3B,GAAgC,UAAUC,KAAV,EAAiB;AAC/C,MAAMC,OAAO,IAAb;;AAEA,OAAKC,MAAL,CAAYC,GAAZ,CACGC,cADH,CACkBJ,MAAMK,OADxB,EACiC,UAACC,MAAD,EAAY;AACzC,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvBN,WAAKO,IAAL,CAAUF,OAAON,KAAjB;AACD,KAFD,MAEO;AACL,UAAIS,WAAW,IAAf;AACA,UAAGH,OAAOI,KAAV,EAAgB;AACd,YAAGJ,OAAOI,KAAP,CAAaC,OAAb,CAAqB,aAArB,IAAsC,CAAC,CAA1C,EAA4C;AAC1CF,qBAAWR,KAAKW,cAAL,GAAsB,wBAAjC;AACD,SAFD,MAEK;AACHH,qBAAWR,KAAKW,cAAL,GAAsB,GAAtB,GAA4BN,OAAOI,KAAnC,GAA2C,GAAtD;AACD;AACF;AACDT,WAAKY,IAAL,CAAU,IAAV,EAAgB,IAAhB,EAAsBJ,QAAtB;AACD;AACF,GAfH;AAgBD,CAnBD;;AAqBAhB,iBAAiBK,SAAjB,CAA2BgB,OAA3B,GAAqC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,EAA3B,EAA+B;AAClE,OAAKD,QAAL,GAAgBA,QAAhB;AACA,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKE,EAAL,GAAUA,EAAV;;AAEA,OAAKC,cAAL,GAAsB,eAAa,KAAKH,KAAlB,SAA2B,KAAKC,QAAhC,UAClB,oCADJ;AAEA,OAAKJ,cAAL,GAAsB,eAAa,KAAKG,KAAlB,SAA2B,KAAKC,QAAhC,UAClB,wCADJ;;AAGA,OAAKG,SAAL,GAAkB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,eAAL;;AAEA,SAAO,IAAP;AACD,CAjBD;;AAmBAC,OAAOC,OAAP,GAAiBhC,gBAAjB","file":"getMobileElValue.js","sourcesContent":["import util from \"util\";\nimport BaseCommand from \"../../base-mobile-command\";\n\nconst GetMobileElValue = function (nightwatch = null) {\n  BaseCommand.call(this, nightwatch);\n  this.cmd = \"getmobileels\";\n};\n\nutil.inherits(GetMobileElValue, BaseCommand);\n\nGetMobileElValue.prototype.do = function (value) {\n  const self = this;\n\n  this.client.api\n    .elementIdValue(value.ELEMENT, (result) => {\n      if (result.status === 0) {\n        self.pass(result.value);\n      } else {\n        let errorMsg = null;\n        if(result.error){\n          if(result.error.indexOf(\"not visible\") > -1){\n            errorMsg = self.failureMessage + \"[SELECTOR_NOT_VISIBLE]\";\n          }else{\n            errorMsg = self.failureMessage + \"[\" + result.error + \"]\";\n          }\n        }\n        self.fail(null, null, errorMsg);\n      }\n    });\n};\n\nGetMobileElValue.prototype.command = function (using, selector, cb) {\n  this.selector = selector;\n  this.using = using;\n  this.cb = cb;\n\n  this.successMessage = `Selector '${this.using}:${this.selector}' `\n    + \"was visible after %d milliseconds.\";\n  this.failureMessage = `Selector '${this.using}:${this.selector}' `\n    + \"was not visible after %d milliseconds.\";\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times selector is successfully checked by /element protocol\n  this.seenCount = 0;\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = GetMobileElValue;\n"]}