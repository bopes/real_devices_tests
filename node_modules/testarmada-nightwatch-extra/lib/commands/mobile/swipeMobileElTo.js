"use strict";

var _util = require("util");

var _util2 = _interopRequireDefault(_util);

var _baseMobileCommand = require("../../base-mobile-command");

var _baseMobileCommand2 = _interopRequireDefault(_baseMobileCommand);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SwipeMobileElTo = function SwipeMobileElTo() {
  var nightwatch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

  _baseMobileCommand2.default.call(this, nightwatch);
  this.cmd = "swipemobileelto";
};

_util2.default.inherits(SwipeMobileElTo, _baseMobileCommand2.default);

SwipeMobileElTo.prototype.do = function (value) {
  var self = this;

  var options = {
    path: "/session/" + this.client.sessionId + "/touch/perform",
    method: "POST",
    data: {
      "actions": [{ "action": "press", "options": { "element": value.ELEMENT } }, { "action": "wait", "options": { "ms": 800 } }, { "action": "moveTo", "options": { "x": this.x, "y": this.y } }, { "action": "release", "options": {} }]
    }
  };

  this.protocol(options, function (result) {
    if (result.status === 0) {
      self.pass(result.value);
    } else {
      self.fail();
    }
  });
};

/*eslint max-params:["error", 5] */
SwipeMobileElTo.prototype.command = function (using, selector, x, y, cb) {
  this.selector = selector;
  this.using = using;
  this.cb = cb;
  this.x = x;
  this.y = y;

  this.successMessage = "Selector '" + this.using + ":" + this.selector + "' " + ("was swiped toward {x:" + x + ", y:" + y + "} after %d milliseconds.");
  this.failureMessage = "Selector '" + this.using + ":" + this.selector + "' " + ("was't swiped toward {x:" + x + ", y:" + y + "} after %d milliseconds.");

  this.startTime = new Date().getTime();

  // Track how many times selector is successfully checked by /element protocol
  this.seenCount = 0;
  this.checkConditions();

  return this;
};

module.exports = SwipeMobileElTo;
//# sourceMappingURL=swipeMobileElTo.js.map