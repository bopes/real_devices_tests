{"version":3,"sources":["../../../src/commands/mobile/closeApp.js"],"names":["MAX_TIMEOUT","COMMAND_MAX_TIMEOUT","WAIT_INTERVAL","CloseApp","nightwatch","call","cmd","inherits","prototype","do","value","pass","checkConditions","self","options","path","client","sessionId","method","data","protocol","result","status","seenCount","elapsed","Date","getTime","startTime","elapse","time","executeAsyncTime","seleniumCallTime","fail","setTimeout","command","cb","successMessage","failureMessage","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,mBAASC,mBAA7B;AACA,IAAMC,gBAAgB,mBAASA,aAA/B;;AAEA,IAAMC,WAAW,SAAXA,QAAW,GAA6B;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AAC5C,8BAAYC,IAAZ,CAAiB,IAAjB,EAAuBD,UAAvB;AACA,OAAKE,GAAL,GAAW,UAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcJ,QAAd;;AAEAA,SAASK,SAAT,CAAmBC,EAAnB,GAAwB,UAAUC,KAAV,EAAiB;AACvC,OAAKC,IAAL,CAAUD,KAAV;AACD,CAFD;;AAIAP,SAASK,SAAT,CAAmBI,eAAnB,GAAqC,YAAY;AAC/C,MAAMC,OAAO,IAAb;;AAEA,MAAMC,UAAU;AACdC,wBAAkB,KAAKC,MAAL,CAAYC,SAA9B,sBADc;AAEdC,YAAQ,MAFM;AAGdC,UAAM;AAHQ,GAAhB;;AAMAN,OAAKO,QAAL,CAAcN,OAAd,EAAuB,UAACO,MAAD,EAAY;AACjC,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB;AACvB;AACAT,WAAKU,SAAL,IAAkB,CAAlB;AACD;;AAED,QAAMC,UAAW,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyBb,KAAKc,SAA9C;AACA,QAAId,KAAKU,SAAL,IAAkB,CAAlB,IAAuBC,UAAUxB,WAArC,EAAkD;AAChD,UAAIa,KAAKU,SAAL,IAAkB,CAAtB,EAAyB;AACvB,YAAMK,SAAU,IAAIH,IAAJ,EAAD,CAAaC,OAAb,EAAf;AACAb,aAAKgB,IAAL,CAAUC,gBAAV,GAA6BF,SAASf,KAAKc,SAA3C;AACAd,aAAKgB,IAAL,CAAUE,gBAAV,GAA6B,CAA7B;AACAlB,aAAKJ,EAAL,CAAQY,OAAOX,KAAf;AACD,OALD,MAKO;AACLG,aAAKmB,IAAL;AACD;AACF,KATD,MASO;AACLC,iBAAWpB,KAAKD,eAAhB,EAAiCV,aAAjC;AACD;AACF,GAnBD;AAoBD,CA7BD;;AA+BAC,SAASK,SAAT,CAAmB0B,OAAnB,GAA6B,UAAUC,EAAV,EAAc;AACzC,OAAKA,EAAL,GAAUA,EAAV;;AAEA,OAAKC,cAAL,GAAsB,uCAAtB;AACA,OAAKC,cAAL,GAAsB,0CAAtB;;AAEA,OAAKV,SAAL,GAAkB,IAAIF,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKH,SAAL,GAAiB,CAAjB;AACA,OAAKX,eAAL;;AAEA,SAAO,IAAP;AACD,CAbD;;AAeA0B,OAAOC,OAAP,GAAiBpC,QAAjB","file":"closeApp.js","sourcesContent":["import util from \"util\";\nimport BaseCommand from \"../../base-mobile-command\";\nimport settings from \"../../settings\";\n\nconst MAX_TIMEOUT = settings.COMMAND_MAX_TIMEOUT;\nconst WAIT_INTERVAL = settings.WAIT_INTERVAL;\n\nconst CloseApp = function (nightwatch = null) {\n  BaseCommand.call(this, nightwatch);\n  this.cmd = \"closeapp\";\n};\n\nutil.inherits(CloseApp, BaseCommand);\n\nCloseApp.prototype.do = function (value) {\n  this.pass(value);\n};\n\nCloseApp.prototype.checkConditions = function () {\n  const self = this;\n\n  const options = {\n    path: `/session/${this.client.sessionId}/appium/app/close`,\n    method: \"POST\",\n    data: {}\n  };\n\n  self.protocol(options, (result) => {\n    if (result.status === 0) {\n      // sucessful\n      self.seenCount += 1;\n    }\n\n    const elapsed = (new Date()).getTime() - self.startTime;\n    if (self.seenCount >= 1 || elapsed > MAX_TIMEOUT) {\n      if (self.seenCount >= 1) {\n        const elapse = (new Date()).getTime();\n        self.time.executeAsyncTime = elapse - self.startTime;\n        self.time.seleniumCallTime = 0;\n        self.do(result.value);\n      } else {\n        self.fail();\n      }\n    } else {\n      setTimeout(self.checkConditions, WAIT_INTERVAL);\n    }\n  });\n};\n\nCloseApp.prototype.command = function (cb) {\n  this.cb = cb;\n\n  this.successMessage = \"App was closed after %d milliseconds.\";\n  this.failureMessage = \"App wasn't closed after %d milliseconds.\";\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times selector is successfully checked by /element protocol\n  this.seenCount = 0;\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = CloseApp;\n"]}