"use strict";

var _util = require("util");

var _util2 = _interopRequireDefault(_util);

var _baseMobileCommand = require("../../base-mobile-command");

var _baseMobileCommand2 = _interopRequireDefault(_baseMobileCommand);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SwipeScreenTo = function SwipeScreenTo() {
  var nightwatch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

  _baseMobileCommand2.default.call(this, nightwatch);
  this.cmd = "swipescreento";
};

_util2.default.inherits(SwipeScreenTo, _baseMobileCommand2.default);

SwipeScreenTo.prototype.do = function () {
  var self = this;

  var options = {
    path: "/session/" + this.client.sessionId + "/touch/perform",
    method: "POST",
    data: {
      "actions": [{ "action": "press", "options": { "x": this.fx, "y": this.fy } }, { "action": "wait", "options": { "ms": 800 } }, { "action": "moveTo", "options": { "x": this.tx, "y": this.ty } }, { "action": "release", "options": {} }]
    }
  };

  this.protocol(options, function (result) {
    if (result.status === 0) {
      self.pass(result.value);
    } else {
      self.fail();
    }
  });
};

/*eslint max-params:["error", 5] */
SwipeScreenTo.prototype.command = function (fx, fy, tx, ty, cb) {
  this.fx = fx;
  this.fy = fy;
  this.tx = tx;
  this.ty = ty;
  this.cb = cb;

  this.successMessage = "Screen was swiped from {x:" + fx + ", y:" + fy + "} " + ("towards {x:" + tx + ", y:" + ty + "} after %d milliseconds.");
  this.failureMessage = "Screen wasn't swiped from {x:" + fx + ", y:" + fy + "} " + ("towards {x:" + tx + ", y:" + ty + "} after %d milliseconds.");

  this.startTime = new Date().getTime();

  // Track how many times selector is successfully checked by /element protocol
  this.seenCount = 0;
  this.do();

  return this;
};

module.exports = SwipeScreenTo;
//# sourceMappingURL=swipeScreenTo.js.map