{"version":3,"sources":["../../../src/assertions/mobile/mobileElAttrContains.js"],"names":["MobileElAttrContains","nightwatch","call","cmd","inherits","prototype","do","value","self","client","api","elementIdAttribute","ELEMENT","attr","result","fail","expected","message","status","assert","protocolFailureDetails","actual","pactual","replace","undefined","indexOf","RegExp","exec","failureDetails","pass","command","using","selector","format","notVisibleFailureMessage","startTime","Date","getTime","seenCount","checkConditions","module","exports"],"mappings":";;AAAA;;;;AAEA;;;;;;AAEA,IAAMA,uBAAuB,SAAvBA,oBAAuB,GAA6B;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AACxD,gCAAcC,IAAd,CAAmB,IAAnB,EAAyBD,UAAzB;AACA,OAAKE,GAAL,GAAW,sBAAX;AACD,CAHD;;AAKA,eAAKC,QAAL,CAAcJ,oBAAd;;AAEAA,qBAAqBK,SAArB,CAA+BC,EAA/B,GAAoC,UAAUC,KAAV,EAAiB;AACnD,MAAMC,OAAO,IAAb;;AAEA,OAAKC,MAAL,CAAYC,GAAZ,CACGC,kBADH,CACsBJ,MAAMK,OAD5B,EACqC,KAAKC,IAD1C,EACgD,UAACC,MAAD,EAAY;AACxD,QAAGA,OAAOP,KAAP,KAAiB,IAApB,EAAyB;AACvBC,WAAKO,IAAL,CAAU,uBAAV,EAAmCP,KAAKQ,QAAxC,EAAkDR,KAAKS,OAAL,GAAe,uBAAjE;AACD,KAFD,MAEO,IAAIH,OAAOI,MAAP,KAAkB,CAAtB,EAAyB;AAC9BV,WAAKW,MAAL,CAAYL,OAAOP,KAAnB,EAA0BC,KAAKQ,QAA/B;AACD,KAFM,MAEA;AACLR,WAAKO,IAAL,CAAU,0BAAV,8BAC4BD,OAAOI,MADnC,EAEEV,KAAKY,sBAFP;AAGD;AACF,GAXH;AAYD,CAfD;;AAiBApB,qBAAqBK,SAArB,CAA+Bc,MAA/B,GAAwC,UAAUE,MAAV,EAAkBL,QAAlB,EAA4B;AAClE,MAAMM,UAAUD,OAAOE,OAAP,CAAe,WAAf,EAA4B,GAA5B,CAAhB;;AAEA,MAAIP,aAAaQ,SAAb,IAA0BF,QAAQG,OAAR,CAAgBT,QAAhB,IAA4B,CAA5B,IACzB,CAAC,IAAIU,MAAJ,CAAWV,QAAX,EAAqBW,IAArB,CAA0BL,OAA1B,CADN,EAC0C;AACxC,SAAKP,IAAL,CAAUO,OAAV,EAAmBN,QAAnB,EAA6B,KAAKC,OAAlC,EAA2C,KAAKW,cAAhD;AACD,GAHD,MAGO;AACL,SAAKC,IAAL,CAAUP,OAAV,EAAmBN,QAAnB,EAA6B,KAAKC,OAAlC;AACD;AACF,CATD;;AAWA;AACAjB,qBAAqBK,SAArB,CAA+ByB,OAA/B,GAAyC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BnB,IAA3B,EAAiCG,QAAjC,EAA2C;AAClF,OAAKgB,QAAL,GAAgBA,QAAhB;AACA,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKlB,IAAL,GAAYA,IAAZ;AACA,OAAKG,QAAL,GAAgBA,QAAhB;;AAEA,OAAKC,OAAL,GAAe,eAAKgB,MAAL,CAAY,gDACvB,2CADW,EAEb,KAAKF,KAFQ,EAED,KAAKC,QAFJ,EAEc,KAAKnB,IAFnB,EAEyB,KAAKG,QAF9B,CAAf;AAGA,OAAKY,cAAL,yCAA0D,KAAKZ,QAA/D;AACA,OAAKI,sBAAL,GAA8B,eAAKa,MAAL,CAAY,iDAAZ,EAC5B,KAAKF,KADuB,EAChB,KAAKC,QADW,EACD,KAAKnB,IADJ,CAA9B;AAEA,OAAKqB,wBAAL,kBAA6C,KAAKH,KAAlD,SAA2D,KAAKC,QAAhE;;AAGA,OAAKG,SAAL,GAAkB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAjB;;AAEA;AACA,OAAKC,SAAL,GAAiB,CAAjB;AACA,OAAKC,eAAL;;AAEA,SAAO,IAAP;AACD,CAtBD;;AAwBAC,OAAOC,OAAP,GAAiBzC,oBAAjB","file":"mobileElAttrContains.js","sourcesContent":["import util from \"util\";\n\nimport BaseAssertion from \"../../base-mobile-assertion\";\n\nconst MobileElAttrContains = function (nightwatch = null) {\n  BaseAssertion.call(this, nightwatch);\n  this.cmd = \"mobileelattrcontains\";\n};\n\nutil.inherits(MobileElAttrContains, BaseAssertion);\n\nMobileElAttrContains.prototype.do = function (value) {\n  const self = this;\n\n  this.client.api\n    .elementIdAttribute(value.ELEMENT, this.attr, (result) => {\n      if(result.value === null){\n        self.fail(\"[attribute not found]\", self.expected, self.message + \"[ATTRIBUTE_NOT_FOUND]\");\n      } else if (result.status === 0) {\n        self.assert(result.value, self.expected);\n      } else {\n        self.fail(\"selenium return.status=0\",\n          `selenium result.status=${result.status}`,\n          self.protocolFailureDetails);\n      }\n    });\n};\n\nMobileElAttrContains.prototype.assert = function (actual, expected) {\n  const pactual = actual.replace(/[\\s|\\n]+/g, \" \");\n\n  if (expected === undefined || pactual.indexOf(expected) < 0\n    && !new RegExp(expected).exec(pactual)) {\n    this.fail(pactual, expected, this.message, this.failureDetails);\n  } else {\n    this.pass(pactual, expected, this.message);\n  }\n};\n\n/*eslint max-params:[\"error\", 4] */\nMobileElAttrContains.prototype.command = function (using, selector, attr, expected) {\n  this.selector = selector;\n  this.using = using;\n  this.attr = attr;\n  this.expected = expected;\n\n  this.message = util.format(\"Testing if selector <%s:%s> attribute <%s> \"\n    + \"contains text <%s> after %d milliseconds \",\n    this.using, this.selector, this.attr, this.expected);\n  this.failureDetails = `actual result:[ %s ], expected:[ ${this.expected} ]`;\n  this.protocolFailureDetails = util.format(\"Selector <%s:%s> doesn't have such attribute %s\",\n    this.using, this.selector, this.attr);\n  this.notVisibleFailureMessage = `Selector <${this.using}:${this.selector\n    }> was not visible after %d milliseconds.`;\n\n  this.startTime = (new Date()).getTime();\n\n  // Track how many times we've seen selector as :visible\n  this.seenCount = 0;\n  this.checkConditions();\n\n  return this;\n};\n\nmodule.exports = MobileElAttrContains;\n"]}