"use strict";

var _yargs = require("yargs");

var _yargs2 = _interopRequireDefault(_yargs);

var _wd = require("wd");

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

var _fs = require("fs");

var _fs2 = _interopRequireDefault(_fs);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _settings = require("./settings");

var _settings2 = _interopRequireDefault(_settings);

var _logger = require("./util/logger");

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable max-len */
var createCommandContent = function createCommandContent(wdcommand) {
  return "\n'use strict';\n\nvar wd = require('wd');\nvar _ = require('lodash');\nvar util = require(\"util\");\nvar BaseCommand = require(\"testarmada-nightwatch-extra/lib/base-mobile-command\");\nvar settings = require(\"testarmada-nightwatch-extra/lib/settings\");\n\nvar MAX_TIMEOUT = settings.COMMAND_MAX_TIMEOUT;\nvar WAIT_INTERVAL = settings.WAIT_INTERVAL;\n\nvar Element = function Element(nightwatch) {\n\n  BaseCommand.call(this, nightwatch);\n\n  this.asyncwd = wd.remote(this.client.options.selenium_host, this.client.options.selenium_port, 'async');\n  this.cmd = '" + wdcommand + "';\n};\n\nutil.inherits(Element, BaseCommand);\n\nElement.prototype.command = function (...args) {\n  let cb = null;\n  const wdArguments = _.values(arguments);\n\n  if (arguments.length > 0) {\n    cb = arguments[arguments.length - 1];\n    // trim arguments if last argument isn't callback\n\n    if (typeof cb === 'function') {\n      this.cb = cb;\n      // remove last argument \n      delete wdArguments[arguments.length - 1];\n    }\n  }\n\n  this.successMessage = '[wd command {' + this.cmd + '}] is successful after %d milliseconds.';\n  this.failureMessage = '[wd command {' + this.cmd + '}] wasn\\'t successful after %d milliseconds.';\n\n  this.startTime = new Date().getTime();\n\n  this.asyncwd.attach(this.client.sessionId, (err, cap) => {\n    if (err) {\n      this.fail(err);\n    }\n    this.asyncwd." + wdcommand + ".apply(this.asyncwd, _.flatten([wdArguments, (err, actual) => {\n      !!err === true ? this.fail(err) : this.pass(actual);\n    }]));\n  });\n\n  return this;\n};\n\nmodule.exports = Element;\n";
};
module.exports = function () {
  var argv = _yargs2.default.usage("Usage: $0 --output path").option("output", {
    alias: "o",
    describe: "Location where owl writes nightwatch compatible wd command to",
    demand: true
  }).help("help").argv;

  var output = argv.output;

  var wd = new _wd.Webdriver("http://" + ("" + _settings2.default.nightwatchConfig.test_settings.default.selenium_host) + (":" + _settings2.default.nightwatchConfig.test_settings.default.selenium_port));

  _logger2.default.log("All nightwatch compatible wd commands will be saved to " + output);

  _lodash2.default.forEach(_lodash2.default.functionsIn(wd), function (command) {
    var arr = _lodash2.default.startCase(command).split(" ");
    arr.unshift("wd");
    var cmd = arr.join("");
    var file = _path2.default.normalize(output + "/" + cmd + ".js");

    _logger2.default.debug("Creating " + cmd + ".js for wd's [" + command + "]");
    _fs2.default.writeFileSync(file, createCommandContent(command));
  });
};
//# sourceMappingURL=owl.js.map