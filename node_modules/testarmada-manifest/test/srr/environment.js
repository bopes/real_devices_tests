/* eslint import/no-extraneous-dependencies: 0, no-undef: 0 */

const expect = require("chai").expect;
const Environment = require("../../src/srr/environment");

describe("Environment", () => {
  it("handle props", () => {
    const env = new Environment("chrome", {name: "baz"});
    expect(env.id).to.equal("chrome");
    expect(env.test.name).to.equal("baz");
    expect(env.attempts.length).to.equal(0);
  });

  it("handle adding a test", () => {
    const env = new Environment("chrome", {name: "baz"});
    env.getAttempt(1);
    expect(env.attempts.length).to.equal(1);
  });

  it("handle adding getting the same test multiple times", () => {
    const env = new Environment("chrome", {name: "baz"});
    env.getAttempt(1);
    env.getAttempt(1);
    expect(env.attempts.length).to.equal(1);
    env.getAttempt(1);
    expect(env.attempts.length).to.equal(1);
  });

  it("handle adding multiple tests", () => {
    const env = new Environment("chrome", {name: "baz"});
    env.getAttempt(1);
    env.getAttempt(2);
    expect(env.attempts.length).to.equal(2);
  });

  it("handle failing tests", () => {
    const env = new Environment("chrome", {name: "baz"});
    env.getAttempt(1);
    env.getAttempt(2);
    expect(env.passed).to.equal(false);
  });

  it("handle retry counts", () => {
    const env = new Environment("chrome", {name: "baz"});
    env.getAttempt(1);
    env.getAttempt(2);
    expect(env.retries.length).to.equal(1);
  });

  it("handle passing", () => {
    const env = new Environment("chrome", {name: "baz"});
    env.getAttempt(1).passed = true;
    expect(env.passed).to.equal(true);
    expect(env.passingAttempt).to.equal(env.getAttempt(1));
  });

  it("handle passing time", () => {
    const env = new Environment("chrome", {name: "baz"});
    const att = env.getAttempt(1);
    att.addMarker({t: 0, name: "start"});
    att.addMarker({t: 500, name: "end"});
    expect(env.timeForPassed).to.equal(0);
    att.passed = true;
    expect(env.timeForPassed).to.equal(500);
  });

  it("handle time elapsed overall", () => {
    const env = new Environment("chrome", {name: "baz"});
    const att = env.getAttempt(1);
    att.addMarker({t: 0, name: "start"});
    att.addMarker({t: 500, name: "end"});
    expect(env.timeElapsed).to.equal(500);
  });

  it("handle time elapsed on retries", () => {
    const env = new Environment("chrome", {name: "baz"});

    const att1 = env.getAttempt(1);
    att1.addMarker({t: 0, name: "start"});
    att1.addMarker({t: 300, name: "end"});

    const att2 = env.getAttempt(2);
    att2.addMarker({t: 0, name: "start"});
    att2.addMarker({t: 500, name: "end"});

    expect(env.timeRetrying).to.equal(300);
    expect(env.timeElapsed).to.equal(800);
  });
});
