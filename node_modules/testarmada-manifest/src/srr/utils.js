const _average = (a) => a.length > 0 ? a.reduce((c, v) => c + v, 0) / parseFloat(a.length) : 0;

module.exports = {
  marker: (msg) => msg.data.markers ? msg.data.markers[0] : msg.data,
  values: (obj) => Object.keys(obj).map((k) => obj[k]),
  totalTime: (arr) => arr.reduce((cur, mc) => cur + mc.timeElapsed, 0),
  average: _average,
  stddev: (arr) => {
    if (arr.length > 0) {
      const avg = _average(arr);
      const variance = arr.reduce((c, v) => c + (v - avg) * (v - avg), 0);
      return Math.sqrt(variance / arr.length);
    } else {
      return 0;
    }
  }
};
