"use strict";

const TestRun = require("./test-run");

const utils = require("./utils");
const values = utils.values;
const totalTime = utils.totalTime;

class Enviroment {
  constructor(id, test) {
    this.id = id;
    this.test = test;
    this.attempt = {};
  }

  _setAttempts() {
    const attemptArray = values(this.attempt);
    for (const i in attemptArray) {
      attemptArray[i].attempt = i < attemptArray.length - 1;
    }
  }

  get attempts() {
    this._setAttempts();
    return values(this.attempt);
  }

  get retries() {
    this._setAttempts();
    return this.attempts.slice(0, -1);
  }

  getAttempt(attempt) {
    if (this.attempt[attempt] === undefined) {
      this.attempt[attempt] = new TestRun(this.test, this, attempt);
    }
    return this.attempt[attempt];
  }

  get passingAttempt() {
    for (const atp of values(this.attempt)) {
      if (atp.passed) {
        return atp;
      }
    }
    return null;
  }

  get passed() {
    return this.passingAttempt !== null;
  }

  get timeRetrying() {
    return totalTime(this.retries);
  }

  get timeElapsed() {
    return totalTime(this.attempts);
  }

  get timeForPassed() {
    return this.passingAttempt ? this.passingAttempt.timeElapsed : 0;
  }
}

module.exports = Enviroment;
