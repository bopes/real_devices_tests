"use strict";

var _chai = require("chai");

var _chai2 = _interopRequireDefault(_chai);

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _dpro = require("../dpro");

var _dpro2 = _interopRequireDefault(_dpro);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var expect = _chai2.default.expect;
var assert = _chai2.default.assert;

describe("DPRO", function () {
  var config = {};

  beforeEach(function () {
    config = {
      dproEnv: null,
      dproInst: null,
      dproLocation: "./dist/test/data"
    };
  });

  it("Use default DPRO_ENV", function () {
    var dpro = (0, _dpro2.default)(config, true);
    expect(dpro.temconfigstr).to.equal("default");
    expect(dpro.temconfigint).to.equal(1);
    expect(dpro.temconfigbool).to.equal(false);
  });

  it("Pass default DPRO_ENV explicitly", function () {
    config.dproEnv = "default";
    var dpro = (0, _dpro2.default)(config, true);
    expect(dpro.temconfigstr).to.equal("default");
    expect(dpro.temconfigint).to.equal(1);
    expect(dpro.temconfigbool).to.equal(false);
  });

  it("Change DPRO_ENV", function () {
    config.dproEnv = "d.js";
    var dpro = (0, _dpro2.default)(config, true);
    expect(dpro.temconfigstr).to.equal("notdefault");
    expect(dpro.temconfigint).to.equal(1);
    expect(dpro.temconfigbool).to.equal(false);
  });

  it("Return empty object if DPRO_LOCATION isn't correct", function () {
    config.dproLocation = "./doesntexist";
    var dpro = (0, _dpro2.default)(config, true);
    expect(dpro).to.eql({});
  });

  it("Use instance DPRO_INST", function () {
    config.dproEnv = "d";
    config.dproInst = "qa1";
    var dpro = (0, _dpro2.default)(config, true);
    expect(dpro.temconfigstr).to.equal("notdefault");
    expect(dpro.temconfigint).to.equal(2);
    expect(dpro.temconfigbool).to.equal(false);
    expect(dpro.addon).to.equal(false);
  });

  it("Read DPRO_ENV only if DPRO_INST isn't correct", function () {
    config.dproEnv = "d";
    config.dproInst = "nonexist";
    var dpro = (0, _dpro2.default)(config, true);

    expect(dpro.temconfigstr).to.equal("notdefault");
    expect(dpro.temconfigint).to.equal(1);
    expect(dpro.temconfigbool).to.equal(false);
  });
});
//# sourceMappingURL=dpro.test.js.map